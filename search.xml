<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库介绍 SQL基础</title>
      <link href="/2019/06/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D-SQL%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/06/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D-SQL%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>之前通过流去操作文件保存数据的弊端：</p><ol><li>执行效率低</li><li>开发成本高</li><li>一般只能保存小量数据</li><li>只能保存文本数据<a id="more"></a><h4 id="什么是DB"><a href="#什么是DB" class="headerlink" title="什么是DB"></a>什么是DB</h4></li></ol><ul><li>DataBase 数据库： 代表文件集合<h4 id="什么是DBMS"><a href="#什么是DBMS" class="headerlink" title="什么是DBMS"></a>什么是DBMS</h4></li><li>DataBaseManagementSystem 数据库管理系统(软件) ，用于管理保存数据的文件集合，用于和程序员进行交互，常见的DBMS有：Oracle MySQL DB2 SQLServer Sqlite ，DBMS具备网络访问能力</li></ul><h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h4><ul><li>Structured Query Language：结构化查询语言，用户程序员和DBMS进行交互，用于程序员告诉DBMS到底对数据进行什么操作的</li></ul><h3 id="数据库的分类（了解）"><a href="#数据库的分类（了解）" class="headerlink" title="数据库的分类（了解）"></a>数据库的分类（了解）</h3><ul><li>关系型数据库：经过数学理论验证可以将现实生活中的各种关系保存到数据库，这种就称为关系型数据库。保存数据以表为单位</li><li>非关系数据库：一般都是为了解决某些特定场景的问题比如：缓存，高并发访问，Redis数据库（以key-value形式保存数据）<h4 id="常见的关系型数据"><a href="#常见的关系型数据" class="headerlink" title="常见的关系型数据"></a>常见的关系型数据</h4></li><li>MySQL: 属于Oracle公司的产品，08被Sun公司收购，09年Sun公司被Oracle收购，开源免费，被收购后发布5.5版本使用Oracle的部分技术，性能提高了30%以上，用户量增多，计划把MySQL闭源 原MySQL程序员离开Oracle创建了MariaDB 老板女儿Maria。市场排名第一</li><li>Oracle: 排名第二，闭源 性能最高 收费最贵</li><li>DB2： IBM公司产品 闭源项目</li><li>SQLServer：微软公司产品  闭源</li><li>Sqlite：轻量级数据库，安装包几十k，应用在嵌入式设备或移动设备上，</li></ul><h3 id="开源和闭源"><a href="#开源和闭源" class="headerlink" title="开源和闭源"></a>开源和闭源</h3><ul><li><p>开源：开放源代码 免费试用，通过卖服务盈利，社会上会有一些大牛程序员会无偿的维护和升级</p></li><li><p>闭源：不开放源代码 收费，通过卖产品+服务盈利 ，有大牛会攻击破坏，但是人家养了一群人维护升级</p><h3 id="打开客户端连接MySQL"><a href="#打开客户端连接MySQL" class="headerlink" title="打开客户端连接MySQL"></a>打开客户端连接MySQL</h3></li><li><p>在终端中执行： mysql -uroot -p 回车  如果有密码写密码 回车 如果没有密码则直接回车</p></li></ul><hr><h3 id="和数据库相关的SQL"><a href="#和数据库相关的SQL" class="headerlink" title="和数据库相关的SQL"></a>和数据库相关的SQL</h3><h4 id="查询所有数据库"><a href="#查询所有数据库" class="headerlink" title="查询所有数据库"></a>查询所有数据库</h4><ul><li>show databases;<h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4></li><li>create database db1;<h4 id="查看数据库详情"><a href="#查看数据库详情" class="headerlink" title="查看数据库详情"></a>查看数据库详情</h4></li><li>show create database db1;<h4 id="创建数据库指定字符集"><a href="#创建数据库指定字符集" class="headerlink" title="创建数据库指定字符集"></a>创建数据库指定字符集</h4></li><li>create database db2 character set gbk/utf8;<h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4></li><li>drop database db2;<h4 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h4></li><li>use db1;<h3 id="和表相关的SQL"><a href="#和表相关的SQL" class="headerlink" title="和表相关的SQL"></a>和表相关的SQL</h3><h4 id="查询所有表"><a href="#查询所有表" class="headerlink" title="查询所有表"></a>查询所有表</h4></li><li>show tables;<h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4></li><li>create table 表名(字段1名 字段1的类型,字段2名 字段2的类型,…..);<br>  create table person(name varchar(10),age int);</li><li>创建一个学生表（student） 保存学号id,姓名name,年龄age,语文chinese,数学math,英语english<br>   create table student(id int,name varchar(10),age int,chinese int,math int,english int);<h4 id="查看表详情"><a href="#查看表详情" class="headerlink" title="查看表详情"></a>查看表详情</h4></li><li>show create table 表名;<br>  show create table person;<h4 id="创建表时指定表的引擎和字符集"><a href="#创建表时指定表的引擎和字符集" class="headerlink" title="创建表时指定表的引擎和字符集"></a>创建表时指定表的引擎和字符集</h4></li><li>create table t1(name varchar(10)) engine=myisam charset=gbk;</li></ul><h4 id="表的引擎"><a href="#表的引擎" class="headerlink" title="表的引擎"></a>表的引擎</h4><ul><li>innodb：支持数据库的高级操作如：外键、事务等，默认引擎</li><li>myisam：只支持基础的增删改查操作</li></ul><hr><h3 id="SQL格式："><a href="#SQL格式：" class="headerlink" title="SQL格式："></a>SQL格式：</h3><ol><li>可以有换行</li><li>最后以;结尾</li><li>关键字之间需要有空格(可以写多个空格，建议写一个)</li></ol><h4 id="查看表字段"><a href="#查看表字段" class="headerlink" title="查看表字段"></a>查看表字段</h4><ul><li>desc 表名;<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4></li><li>drop table 表名;<h4 id="修改表相关"><a href="#修改表相关" class="headerlink" title="修改表相关"></a>修改表相关</h4><h5 id="修改表名——rename-table-原名-to-新名"><a href="#修改表名——rename-table-原名-to-新名" class="headerlink" title="修改表名——rename table 原名 to 新名;"></a>修改表名——rename table 原名 to 新名;</h5>  rename table student to stu;<h5 id="修改表的引擎和字符集——alter-table-表名-engine-myisam-innodb-charset-utf8-gbk"><a href="#修改表的引擎和字符集——alter-table-表名-engine-myisam-innodb-charset-utf8-gbk" class="headerlink" title="修改表的引擎和字符集——alter table 表名 engine=myisam/innodb charset=utf8/gbk;"></a>修改表的引擎和字符集——alter table 表名 engine=myisam/innodb charset=utf8/gbk;</h5>  alter table stu engine=myisam charset=gbk;<h5 id="添加表字段"><a href="#添加表字段" class="headerlink" title="添加表字段"></a>添加表字段</h5>最后面： alter table 表名 add 字段名 字段类型;<br>最前面： alter table 表名 add 字段名 字段类型 first;<br>xxx的后面: alter table 表名 add 字段名 字段类型 after xxx;<br>  create table hero(name varchar(10));<br>  alter table hero add age int;<br>  alter table hero add id int first;<br>  alter table hero add sal int after name;<h5 id="删除表字段——alter-table-表名-drop-字段名"><a href="#删除表字段——alter-table-表名-drop-字段名" class="headerlink" title="删除表字段——alter table 表名 drop 字段名;"></a>删除表字段——alter table 表名 drop 字段名;</h5>  alter table hero drop sal;<h5 id="修改表字段的名字和类型——alter-table-表名-change-原字段名-新字段名-新字段类型"><a href="#修改表字段的名字和类型——alter-table-表名-change-原字段名-新字段名-新字段类型" class="headerlink" title="修改表字段的名字和类型——alter table 表名 change 原字段名 新字段名 新字段类型;"></a>修改表字段的名字和类型——alter table 表名 change 原字段名 新字段名 新字段类型;</h5>  alter table hero change name heroname varchar(5);<h5 id="修改表字段的类型和位置——alter-table-表名-modify-字段名-类型-位置"><a href="#修改表字段的类型和位置——alter-table-表名-modify-字段名-类型-位置" class="headerlink" title="修改表字段的类型和位置——alter table 表名 modify 字段名 类型 位置;"></a>修改表字段的类型和位置——alter table 表名 modify 字段名 类型 位置;</h5>  alter table hero modify age int first(after xxx);</li></ul><hr><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><ol><li>创建数据库newdb并使用， 里面创建员工表t_emp只有name字段 引擎为myisam 字符集为gbk<br> 1). create database newdb;<br> 2). use newdb;<br> 3). create table t_emp(name varchar(10)) engine=myisam charset=gbk;</li><li>修改表名为emp<br> 1). rename table t_emp to emp;</li><li>修改引擎为innodb 字符集为utf8<br> 1). alter table emp engine=innodb charset=utf8;</li><li>添加部门编号字段deptno 在最后面<br> 1). alter table emp add deptno int;</li><li>添加员工编号 empno在最前面<br> 1). alter table emp add empno int first;</li><li>添加salary字段在name的后面<br> 1). alter table emp add salary int after name;</li><li>修改salary字段名字为sal，把sal放在empno的后面<br> 1). alter table emp change salary sal int;<br> 2). alter table emp modify sal int after empno;</li><li>删除sal字段<br> 1).alter table emp drop sal;</li><li>删除表<br> 1).drop table emp;</li><li>删除数据库<br>1).drop database newdb;</li></ol><hr><h3 id="数据相关"><a href="#数据相关" class="headerlink" title="数据相关"></a>数据相关</h3><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><pre><code>create table emp(id int,name varchar(10),age int,sal int);</code></pre><ul><li>全表插入数据：<ul><li>insert into emp values(1,’Tom’,18,3000);</li></ul></li><li>指定字段插入数据：<ul><li>insert into emp (name,age) values(‘Jerry’,19);</li><li>insert into emp (name) values(‘李白’);</li></ul></li><li>批量插入数据：<br>  insert into emp values(3,’刘备’,28,6000),(4,’张飞’,20,5000),(5,’关羽’,25,9000);<br>  insert into emp (name,age) values(‘悟空’,500),(‘八戒’,400),(‘沙僧’,200);<h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4></li><li>查询全部数据的全部字段信息<br>  select * from emp;</li><li>查询所有员工的姓名和年龄<br>  select name,age from emp;</li><li>查询年龄在25岁以下的员工信息<br>  select * from emp where age&lt;25;</li><li>查询工资3000块钱的员工姓名、年龄、工资<br>  select name,age,sal from emp where sal=3000;<h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4></li><li>修改Tom的工资为3333<br>  update emp set sal=3333 where name=’Tom’;</li><li>修改30岁以下的工资为666<br>  update emp set sal=666 where age&lt;30;</li><li>修改id等于3的名字为吕布 年龄为55 工资为20000<br>  update emp set name=’吕布’, age=55, sal=20000 where id=3;</li><li>修改工资为null的工资为800<br>  update emp set sal=800 where sal is null;<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4></li><li>删除id=1的员工<br>  delete from emp where id=1;</li><li>删除年龄在25岁以下的员工<br>  delete from emp where age&lt;25;</li><li>删除全部数据<br>  delete from emp;</li></ul><p>insert into t1 (字段名1,字段名2) values(值1,值2),(值1,值2);<br>select name,age from t1 where id&lt;5;<br>update t1 set 字段名=值, 字段名=值 where id=5;<br>delete from t1 where id&lt;3;</p><hr><h3 id="练习：-1"><a href="#练习：-1" class="headerlink" title="练习："></a>练习：</h3><ol><li>创建hero表如果存在则先删除再创建， id 姓名name 类型type 金币money</li><li>插入以下数据   1 诸葛亮 法师 18888 ， 2 孙悟空 打野 18888 ，3 小乔 法师 6888，4 黄忠 射手 8888， 5 刘备 战士 6888</li><li>修改所有18888的为28888</li><li>修改所有打野为刺客</li><li>删除价格为6888的英雄</li><li>修改孙悟空为猪八戒</li><li>删除id为1，2，3的英雄</li><li>修改所有英雄的类型为已阵亡</li><li>删除所有数据</li><li>删除表</li></ol><hr><h3 id="中文字符问题"><a href="#中文字符问题" class="headerlink" title="中文字符问题"></a>中文字符问题</h3><ul><li>set names gbk;</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
