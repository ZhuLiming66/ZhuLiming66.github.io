{"meta":{"title":"阿希、@的博客","subtitle":"从学习中积淀，从实践中成长","description":"潍坊学院2016级网络工程专业，现读大三，自学Java，一名编程新手","author":"阿希、@","url":"http://zhuliming66.com","root":"/"},"pages":[{"title":"about","date":"2019-06-02T04:33:26.000Z","updated":"2019-06-02T04:33:26.062Z","comments":true,"path":"about/index.html","permalink":"http://zhuliming66.com/about/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-06-02T04:28:15.000Z","updated":"2019-06-02T04:29:54.751Z","comments":true,"path":"tags/index.html","permalink":"http://zhuliming66.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-06-02T04:31:15.000Z","updated":"2019-06-02T04:32:15.825Z","comments":true,"path":"categories/index.html","permalink":"http://zhuliming66.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"主键约束、拆分表、事务、数据类型","slug":"主键约束、拆分表、事务、数据类型","date":"2019-06-01T14:47:49.000Z","updated":"2019-06-02T13:59:55.568Z","comments":true,"path":"2019/06/01/主键约束、拆分表、事务、数据类型/","link":"","permalink":"http://zhuliming66.com/2019/06/01/主键约束、拆分表、事务、数据类型/","excerpt":"","text":"主键约束 primary key主键：用于表示数据唯一性的字段称为主键约束： 是给表字段添加的限制条件主键约束：限制主键字段值不能重复并且非空 (唯一且非空)create table t1(id int primary key,name varchar(10)); insert into t1 values(1,&apos;Tom&apos;); insert into t1 values(1,&apos;Jerry&apos;);//失败 重复 insert into t1 values(null,&apos;ABC&apos;);//失败 不能为null 自增： auto_incrementcreate table t2(id int primary key auto_increment,name varchar(10)); insert into t2 values(null,&apos;AAA&apos;); insert into t2 values(2,&apos;AAA&apos;); insert into t2 values(10,&apos;mm&apos;); insert into t2 values(null,&apos;AAA&apos;); 1. 当字段值为null的时候值会自己增长 2. 自增字段值也可以手动赋值 3. 增长规则：从曾经出现的最大值基础上+1 4. 自增数值只增不减 (delete清空表 自增数值并不清零)注释 comment创建表声明字段的时候给字段添加的介绍create table t3(id int primary key auto_increment comment &apos;这是一个主键&apos;,name varchar(10) comment &apos;这是员工的姓名&apos;);` 和 ‘`: 用于修饰表名和字段名 可以省略create table `t4`(`id` int,`name` varchar(10));‘ :用于修饰字符串数据冗余如果表设计不够合理，保存大量数据的同时可能随之会出现大量重复数据，这些重复数据的现象就称为数据冗余，通过拆分表的形式解决冗余问题 练习：设计表保存以下数据：设计表保存以下数据： 保存男装分类(category)下西服分类下的商品皮尔卡丹西服，价格9800，库存98件 保存家用电器分类下，电视机分类下的小米电视，价格2500，库存108件 创建商品表 create table item(id int primary key auto_increment, name varchar(10),price int,num int,categoryid int); 创建分类表 create table category(id int primary key auto_increment,name varchar(10),parentid int); 插入数据 insert into category values(null,’男装’,null),(null,’西服’,1),(null,’家电’,null),(null,’电视机’,3); insert into item values(null,’皮尔卡丹’,9800,98,2),(null,’小米电视’,2500,108,4); 事务什么是事务？事务是数据库中执行SQL语句的最小工作单元，可以保证事务内的多条SQL语句要么全部成功，要么全部失败。 查看数据库自动提交的状态 show variables like ‘%autocommit%’; 关掉自动提交 0关闭 1开启 set autocommit=0; 测试转账： create table person(id int, name varchar(10),money int); insert into person values(1,’超人’,500),(2,’钢铁侠’,10000); 关掉自动提交： set autocommit=0; 先让超人+2000 update person set money=2500 where id=1; 开启另一个终端 验证 此时数据库文件中的数据并没改掉 让钢铁侠-2000 update person set money=8000 where id=2; 执行提交 commit; 回滚 rollback;将内存中的修改回滚到上次提交（commit）的点update person set money=100 where id=1; rollback;保存回滚点 savepointupdate person set money=100 where id=1; savepoint s1; update person set money=200 where id=1; savepoint s2; rollback to s1; SQL的分类DDL Data Definition Language 数据定义语言，包括 create,alter,drop,truncate ,不支持事务DML Data Manipulation Language 数据操作语言， 包括 insert,delete,update,select(DQL),支持事务DQL Data Query Language 数据查询语言，只包括select，和事务没有关系因为并没有修改数据TCL Transaction Control Language 事务控制语言，包括 commit,rollback, savepoint,rollback toDCL Data Control Language 数据控制语言，用于处理分配用户权限相关的操作 truncate truncate table 表名; 删除表并且创建一个新表 truncate、drop和delete的区别： delete用于删除数据，使用delete清空表时自增数值不清零 执行效率最低 drop 用于删除表 执行效率最高 truncate 用于删除表并创建新的空表，执行效率比delete要高，而且自增数值会清零 数据库的数据类型整数 常用整数有 int(m)和bigint(m)，m代表显示长度必须和zerofill结合使用 create table t_int(num int(10) zerofill); insert into t_int values(123); select * from t_int; 浮点数 常用浮点数double(m,d) m代表总长度 d代表小数长度 23.346 m=5 d=3 decimal超高精度浮点数，应用场景：涉及超高精度运算时使用 create table t_double(num double(5,3)); insert into t_double values(23.5678); 值为23.568 insert into t_double values(23.5); 值为23.500 字符串 char(m): 固定长度 m=10 abc 占10，效率高，最大255 varchar(m):可变长度 m=10 abc 占3，节省空间，最大65535，如果超过255建议使用text text(m):可变长度 最大65535日期 date:只能保存年月日 time:只能保存时分秒 datetime:保存年月日时分秒，默认值为null，最大值9999-12-31 timestamp(时间戳距离19700101 08：00：00):保存年月日时分秒，默认值为当前系统时间,最大值2038-01-19 create table t_time(t1 date,t2 time,t3 datetime,t4 timestamp); insert into t_time values(‘2018-10-16’,null,null,null); insert into t_time values (null,’20:06:32’,’2008-11-22 18:22:11’,null); 配置URL：jdbc:mysql://localhost:3306/db2?useUnicode=true&amp;characterEncoding=UTF-8 三方SQL工具：sqlyog","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://zhuliming66.com/tags/MySQL/"}]},{"title":"数据库介绍 SQL基础","slug":"数据库介绍-SQL基础","date":"2019-06-01T14:47:49.000Z","updated":"2019-06-01T16:02:07.427Z","comments":true,"path":"2019/06/01/数据库介绍-SQL基础/","link":"","permalink":"http://zhuliming66.com/2019/06/01/数据库介绍-SQL基础/","excerpt":"数据库之前通过流去操作文件保存数据的弊端： 执行效率低 开发成本高 一般只能保存小量数据 只能保存文本数据","text":"数据库之前通过流去操作文件保存数据的弊端： 执行效率低 开发成本高 一般只能保存小量数据 只能保存文本数据 什么是DB DataBase 数据库： 代表文件集合什么是DBMS DataBaseManagementSystem 数据库管理系统(软件) ，用于管理保存数据的文件集合，用于和程序员进行交互，常见的DBMS有：Oracle MySQL DB2 SQLServer Sqlite ，DBMS具备网络访问能力 SQL Structured Query Language：结构化查询语言，用户程序员和DBMS进行交互，用于程序员告诉DBMS到底对数据进行什么操作的 数据库的分类（了解） 关系型数据库：经过数学理论验证可以将现实生活中的各种关系保存到数据库，这种就称为关系型数据库。保存数据以表为单位 非关系数据库：一般都是为了解决某些特定场景的问题比如：缓存，高并发访问，Redis数据库（以key-value形式保存数据）常见的关系型数据 MySQL: 属于Oracle公司的产品，08被Sun公司收购，09年Sun公司被Oracle收购，开源免费，被收购后发布5.5版本使用Oracle的部分技术，性能提高了30%以上，用户量增多，计划把MySQL闭源 原MySQL程序员离开Oracle创建了MariaDB 老板女儿Maria。市场排名第一 Oracle: 排名第二，闭源 性能最高 收费最贵 DB2： IBM公司产品 闭源项目 SQLServer：微软公司产品 闭源 Sqlite：轻量级数据库，安装包几十k，应用在嵌入式设备或移动设备上， 开源和闭源 开源：开放源代码 免费试用，通过卖服务盈利，社会上会有一些大牛程序员会无偿的维护和升级 闭源：不开放源代码 收费，通过卖产品+服务盈利 ，有大牛会攻击破坏，但是人家养了一群人维护升级 打开客户端连接MySQL 在终端中执行： mysql -uroot -p 回车 如果有密码写密码 回车 如果没有密码则直接回车 和数据库相关的SQL查询所有数据库 show databases;创建数据库 create database db1;查看数据库详情 show create database db1;创建数据库指定字符集 create database db2 character set gbk/utf8;删除数据库 drop database db2;使用数据库 use db1;和表相关的SQL查询所有表 show tables;创建表 create table 表名(字段1名 字段1的类型,字段2名 字段2的类型,…..); create table person(name varchar(10),age int); 创建一个学生表（student） 保存学号id,姓名name,年龄age,语文chinese,数学math,英语english create table student(id int,name varchar(10),age int,chinese int,math int,english int);查看表详情 show create table 表名; show create table person;创建表时指定表的引擎和字符集 create table t1(name varchar(10)) engine=myisam charset=gbk; 表的引擎 innodb：支持数据库的高级操作如：外键、事务等，默认引擎 myisam：只支持基础的增删改查操作 SQL格式： 可以有换行 最后以;结尾 关键字之间需要有空格(可以写多个空格，建议写一个) 查看表字段 desc 表名;删除表 drop table 表名;修改表相关修改表名——rename table 原名 to 新名; rename table student to stu;修改表的引擎和字符集——alter table 表名 engine=myisam/innodb charset=utf8/gbk; alter table stu engine=myisam charset=gbk;添加表字段最后面： alter table 表名 add 字段名 字段类型;最前面： alter table 表名 add 字段名 字段类型 first;xxx的后面: alter table 表名 add 字段名 字段类型 after xxx; create table hero(name varchar(10)); alter table hero add age int; alter table hero add id int first; alter table hero add sal int after name;删除表字段——alter table 表名 drop 字段名; alter table hero drop sal;修改表字段的名字和类型——alter table 表名 change 原字段名 新字段名 新字段类型; alter table hero change name heroname varchar(5);修改表字段的类型和位置——alter table 表名 modify 字段名 类型 位置; alter table hero modify age int first(after xxx); 练习： 创建数据库newdb并使用， 里面创建员工表t_emp只有name字段 引擎为myisam 字符集为gbk 1). create database newdb; 2). use newdb; 3). create table t_emp(name varchar(10)) engine=myisam charset=gbk; 修改表名为emp 1). rename table t_emp to emp; 修改引擎为innodb 字符集为utf8 1). alter table emp engine=innodb charset=utf8; 添加部门编号字段deptno 在最后面 1). alter table emp add deptno int; 添加员工编号 empno在最前面 1). alter table emp add empno int first; 添加salary字段在name的后面 1). alter table emp add salary int after name; 修改salary字段名字为sal，把sal放在empno的后面 1). alter table emp change salary sal int; 2). alter table emp modify sal int after empno; 删除sal字段 1).alter table emp drop sal; 删除表 1).drop table emp; 删除数据库1).drop database newdb; 数据相关插入数据create table emp(id int,name varchar(10),age int,sal int); 全表插入数据： insert into emp values(1,’Tom’,18,3000); 指定字段插入数据： insert into emp (name,age) values(‘Jerry’,19); insert into emp (name) values(‘李白’); 批量插入数据： insert into emp values(3,’刘备’,28,6000),(4,’张飞’,20,5000),(5,’关羽’,25,9000); insert into emp (name,age) values(‘悟空’,500),(‘八戒’,400),(‘沙僧’,200);查询数据 查询全部数据的全部字段信息 select * from emp; 查询所有员工的姓名和年龄 select name,age from emp; 查询年龄在25岁以下的员工信息 select * from emp where age&lt;25; 查询工资3000块钱的员工姓名、年龄、工资 select name,age,sal from emp where sal=3000;修改数据 修改Tom的工资为3333 update emp set sal=3333 where name=’Tom’; 修改30岁以下的工资为666 update emp set sal=666 where age&lt;30; 修改id等于3的名字为吕布 年龄为55 工资为20000 update emp set name=’吕布’, age=55, sal=20000 where id=3; 修改工资为null的工资为800 update emp set sal=800 where sal is null;删除数据 删除id=1的员工 delete from emp where id=1; 删除年龄在25岁以下的员工 delete from emp where age&lt;25; 删除全部数据 delete from emp; insert into t1 (字段名1,字段名2) values(值1,值2),(值1,值2);select name,age from t1 where id&lt;5;update t1 set 字段名=值, 字段名=值 where id=5;delete from t1 where id&lt;3; 练习： 创建hero表如果存在则先删除再创建， id 姓名name 类型type 金币money 插入以下数据 1 诸葛亮 法师 18888 ， 2 孙悟空 打野 18888 ，3 小乔 法师 6888，4 黄忠 射手 8888， 5 刘备 战士 6888 修改所有18888的为28888 修改所有打野为刺客 删除价格为6888的英雄 修改孙悟空为猪八戒 删除id为1，2，3的英雄 修改所有英雄的类型为已阵亡 删除所有数据 删除表 中文字符问题 set names gbk;","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://zhuliming66.com/tags/MySQL/"}]}]}